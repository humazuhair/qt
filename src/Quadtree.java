import java.awt.*;import java.awt.event.ActionEvent;import java.util.ArrayList;import java.util.concurrent.Callable;public class Quadtree {    Rectangle rect;    public Quadtree NE, NW, SE, SW;    private Point p;    public Quadtree(Rectangle rect) {        this.rect = rect;    }    public void insert(Point point) {        if (p == null) {            p = point;            return;        }        if (!isLeaf()) {            p = p.add(point);            setBody(point);        } else {            createLeaves();            setBody(p);            setBody(point);            p = p.add(point);        }    }    private void setBody(Point point) {        if (NE.rect.contains(point)) NE.insert(point);        if (NW.rect.contains(point)) NW.insert(point);        if (SE.rect.contains(point)) SW.insert(point);        if (SW.rect.contains(point)) SE.insert(point);    }    private boolean isLeaf() {        return NE == null && NW == null && SE == null && SW == null;    }    public void loop(Callable func) {        try {            func.call();        } catch (Exception e) {            e.printStackTrace();        }    }    private void createLeaves() {        Rectangle ne = new Rectangle(this.rect.getX() + this.rect.getW() / 2, this.rect.getY(), this.rect.getW() / 2, this.rect.getH() / 2);        this.NE = new Quadtree(ne);        Rectangle nw = new Rectangle(this.rect.getX(), this.rect.getY(), this.rect.getW() / 2, this.rect.getH() / 2);        this.NW = new Quadtree(nw);        Rectangle se = new Rectangle(this.rect.getX(), this.rect.getY() + this.rect.getH() / 2, this.rect.getW() / 2, this.rect.getH() / 2);        this.SE = new Quadtree(se);        Rectangle sw = new Rectangle(this.rect.getX() + this.rect.getW() / 2, this.rect.getY() + this.rect.getH() / 2, this.rect.getW() / 2, this.rect.getH() / 2);        this.SW = new Quadtree(sw);    }    void drawRectangles(Graphics g, float x, float y, float w, float h) {        Graphics2D g2d = (Graphics2D) g;        g2d.drawRect((int) x, (int) y, (int) w, (int) h);        if (this.NE != null)            this.NE.drawRectangles(g, NE.rect.getX(), NE.rect.getY(), NE.rect.getW(), NE.rect.getH());        if (this.NW != null)            this.NW.drawRectangles(g, NW.rect.getX(), NW.rect.getY(), NW.rect.getW(), NW.rect.getH());        if (this.SE !=null)            this.SE.drawRectangles(g, SE.rect.getX(), SE.rect.getY(), SE.rect.getW(), SE.rect.getH());        if(this.SW != null)            this.SW.drawRectangles(g, SW.rect.getX(), SW.rect.getY(), SW.rect.getW(), SW.rect.getH());    }}